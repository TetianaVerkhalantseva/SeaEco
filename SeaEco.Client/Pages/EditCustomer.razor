@page "/EditCustomer/{CustomerId:int}"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@attribute [Authorize(Roles = "admin")]
@using SeaEco.Abstractions.Models.Customer
@using SeaEco.EntityFramework.Entities
@using SeaEco.Client.Resources
@inject NavigationManager Navigation

<EditForm Model="_customerEdit" OnValidSubmit="EditCustomerInfo">
    <DataAnnotationsValidator />
    <div class="container mt-4">
        <div class="card shadow-lg p-4">
            <h2 class="text-center page-title">Rediger Kunde</h2>

            <div class="mb-3">
                <label for="Oppdragsgiver" class="form-label">Oppdragsgiver</label>
                <InputText id="Oppdragsgiver" class="form-control form-control-lg" @bind-Value="_customerEdit.Oppdragsgiver" placeholder="Oppdragsgiver" />
            </div>

            <div class="mb-3">
                <label for="Kontaktperson" class="form-label">Kontaktperson</label>
                <InputText id="Kontaktperson" class="form-control form-control-lg" @bind-Value="_customerEdit.Kontaktperson" placeholder="Kontaktperson" />
            </div>

            <div class="mb-3">
                <label for="Telefonnummer" class="form-label">Telefonnummer</label>
                <InputText id="Telefonnummer" class="form-control form-control-lg" @bind-Value="_customerEdit.Telefonnummer" placeholder="Telefonnummer" />
            </div>

            <div class="text-center mt-4">
                <button class="btn btn-outline-secondary me-2" @onclick="() => CustomerInfoPage()">Tilbake</button>
                <button type="submit" class="btn btn-primary">Bekreft</button>
            </div>

            <div class="mt-3 text-center">
                <div class="custom-validation-summary">
                    <ValidationSummary/>
                </div>

                @if (_result.HasValue)
                {
                    @if (_result.Value)
                    {
                        <div class="alert alert-success">@Resources.PageEditCustomerSuccess</div>
                    }
                    else
                    {
                        <div class="alert alert-danger">@Resources.PageEditCustomerFailed</div>
                    }
                }
            </div>
        </div>
    </div>
</EditForm>



@code {
    [Parameter] public int CustomerId { get; set; }
    private Kunde? _customer;
    private EditCustomerDto _customerEdit = new();
    private bool? _result;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _customer = await Http.GetFromJsonAsync<Kunde>($"api/Customer/{CustomerId}");
            if (_customer != null)
            {
                _customerEdit = new EditCustomerDto
                {
                    Oppdragsgiver = _customer.Oppdragsgiver,
                    Kontaktperson = _customer.Kontaktperson,
                    Telefonnummer = _customer.Telefonnummer
                };
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _result = false;
        }
    }

    private async Task EditCustomerInfo()
    {
        var response = await Http.PutAsJsonAsync($"api/Customer/Update-customer/{CustomerId}", _customerEdit);
        if (response.IsSuccessStatusCode)
        {
            _result = true;
            StateHasChanged();
            await Task.Delay(2000);
            Navigation.NavigateTo($"/CustomerInfo/{CustomerId}");
        }
        else
        {
            _result = false;
        }
    }
    
    private void CustomerInfoPage()
    {
        Navigation.NavigateTo($"/CustomerInfo/{CustomerId}");
    }
}