@page "/CustomerInfo/{CustomerId:int}"
@inject HttpClient Http
@using Microsoft.AspNetCore.Authorization
@using SeaEco.Client.Resources
@attribute [Authorize]
@inject NavigationManager Navigation
@using SeaEco.EntityFramework.Entities
@using Microsoft.AspNetCore.Components.Authorization


<div class="container mt-5">
    <h2 class="text-center page-title">@Resources.PageCustomerInfoCustomerInfo</h2>

    <div class="row justify-content-center">
        @if (_customer != null)
        {
            <div class="col-md-8 col-lg-6">
                <div class="card shadow-sm p-4 rounded-3 customer-card">
                    <div class="card-body text-center">
                        <h4 class="customer-title">@Resources.PageCustomerInfoCustomerName</h4>
                        <p class="customer-info">@_customer.Oppdragsgiver</p>

                        <h4 class="customer-title">@Resources.PageCustomerInfoContactPerson</h4>
                        <p class="customer-info">@_customer.Kontaktperson</p>

                        <h4 class="customer-title">@Resources.PageCustomerInfoCustomerNumber</h4>
                        <p class="customer-info">@_customer.Telefonnummer</p>
                    </div>

                    <div class="position-absolute bottom-0 start-0 mb-3 ms-3">
                        <button class="btn btn-outline-secondary me-2" @onclick="() => BackToCustomerPage()">@Resources.ButtonCancel</button>
                    </div>

                    <div class="position-absolute bottom-0 end-0 mb-3 me-3">
                        <AuthorizeView Roles="admin">
                            <button class="btn btn-danger" @onclick="() => DeleteCustomer()">@Resources.ButtonDelete</button>
                        </AuthorizeView>
                        
                        <button class="btn btn-primary" @onclick="() => EditCustomerPage()">@Resources.ButtonEdit</button>
                    </div>
                </div>

                <div class="mt-3 text-center">
                    @if (_result.HasValue)
                    {
                        @if (_result.Value)
                        {
                            <div class="alert alert-success">@Resources.PageCustomerInfoDeleteCustomerSuccess</div>
                        }
                        else
                        {
                            <div class="alert alert-danger">@Resources.PageCustomerInfoDeleteCustomerFailed</div>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>


@code {
    [Parameter]
    public int CustomerId { get; set; }
    private Kunde? _customer = new();
    private bool? _result;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _customer = await Http.GetFromJsonAsync<Kunde>($"api/Customer/{CustomerId}");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    private void BackToCustomerPage()
    {
        Navigation.NavigateTo("Customer");
    }
    
    private void EditCustomerPage()
    {
        Navigation.NavigateTo($"EditCustomer/{CustomerId}");
    }

    private async Task DeleteCustomer()
    {
        var response = await Http.DeleteAsync($"api/Customer/Delete-customer/{CustomerId}");
        if (response.IsSuccessStatusCode)
        {
            _result = true;
            StateHasChanged();
            await Task.Delay(2000);
            Navigation.NavigateTo("Customer");
        }
        else
        {
            _result = false;
        }
    }
}