@page "/newProject/{CustomerId:guid}"
@using Microsoft.AspNetCore.Authorization
@using SeaEco.Abstractions.Enums
@using SeaEco.Abstractions.Extensions
@using SeaEco.Abstractions.Models.Project
@attribute [Authorize(Roles = "admin")]
@using SeaEco.Client.Resources
@using SeaEco.Abstractions.Models.User
@inject HttpClient Http
@using SeaEco.EntityFramework.Entities
@inject NavigationManager Navigation


@if (_isLoading)
{
}
else
{
    <EditForm Model="_newProject" OnValidSubmit="AddNewProject">
    <DataAnnotationsValidator />

        <div class="d-flex flex-column align-items-center gap-3 mb-3">
        <div class="mb-3">
            <h2>Nytt prosjekt</h2>
            <h6 class="text-secondary">- @_customer.Oppdragsgiver</h6>
        </div>
        <div class="d-flex justify-content-lg-start flex-column gap-3">
            <div class="d-flex gap-3">
                <div class="form-floating flex-fill">
                    <InputText class="form-control" id="poId" @bind-Value="_newProject.PoId"/>
                    <label for="poId">PO-ID</label>
                </div>
            </div>
            <div class="d-flex flex-column mt-4 mb-4 gap-3">
                <div class="d-flex gap-3">
                    <div class="form-floating flex-fill" style="min-width:600px;">
                        <InputText class="form-control" id="contactCustomer" @bind-Value="_newProject.Kundekontaktperson"/>
                        <label for="contactCustomer">Kontaktperson</label>
                    </div>
                </div>
                <div class="d-flex gap-3">
                    <div class="form-floating">
                        <InputText class="form-control" id="tlfCustomer" @bind-Value="_newProject.Kundetlf"/>
                        <label for="tlfCustomer">Telefonnummer</label>
                    </div>
                    <div class="form-floating flex-fill">
                        <InputText class="form-control" id="emailCustomer" @bind-Value="_newProject.Kundeepost"/>
                        <label for="emailCustomer">epost</label>
                    </div>
                </div>
            </div>
            <div class="d-flex gap-3">
                <div class="form-floating flex-fill">
                    <InputSelect @bind-Value="_newProject.Produksjonsstatus" id="productionStatus" class="form-select">
                        <option value=""></option>
                        @foreach (var status in Enum.GetValues<Produksjonsstatus>())
                        {
                            <option value="@status">@status.GetDescription()</option>
                        }
                    </InputSelect>
                    <label for="productionStatus">Produksjonsstatus</label>
                </div>
                <div class="form-floating">
                    <InputNumber class="form-control" id="mtb" @bind-Value="_newProject.Mtbtillatelse"/>
                    <label for="mtb">MTB-tilatelse (tonn)</label>
                </div>
            </div>

            <div class="d-flex gap-3 align-items-end">
                @if (!_isNewLocality)
                {
                    <div class="form-floating flex-fill">
                        <InputSelect @bind-Value="_newProject.Lokalitetsnavn" id="locality" class="form-select">
                            <option value="">Velg lokalitet</option>
                            @foreach (var loc in _lokalities)
                            {
                                <option value="@loc.Id">@loc.Lokalitetsnavn (@loc.LokalitetsId)</option>
                            }
                        </InputSelect>
                        <label for="locality">Lokalitet</label>
                    </div>
                }
                else
                {
                    <div class="form-floating flex-fill">
                        <InputText class="form-control" id="newLocalityName" @bind-Value="_newLocaly.Lokalitetsnavn" />
                        <label for="newLocalityName">Lokalitetsnavn</label>
                    </div>
                    <div class="form-floating">
                        <InputText class="form-control" id="newLocalityId" @bind-Value="_newLocaly.LokalitetsId" />
                        <label for="newLocalityId">Lokalitets-Id</label>
                    </div>
                }
            </div>

            <button type="button"
                    class="btn custom-btn align-self-end" style="min-width: 155px"
                    @onclick="ToggleLocalityMode">
                @(_isNewLocality ? "Eksisterende" : "Ny lokalitet")
            </button>
            
            
            <div class="d-flex gap-3 mt-4">
                <div class="d-flex form-floating flex-fill">
                    <InputSelect @bind-Value="_newProject.ProsjektansvarligId" id="user" class="form-select">
                        <option value=""></option>
                        @foreach (var user in _users)
                        {
                            <option value="@user.Id">@user.FullName</option>
                        }
                    </InputSelect>
                    <label for="user">Ansvarlig ansatt</label>
                </div>
            </div>
            <div class="d-flex w-100 mt-4 mb-4">
                <div class="form-floating w-100">
                    <InputTextArea class="form-control" style="height: 150px;" id="comment" @bind-Value="_newProject.Merknad"/>
                    <label for="comment">Merknad</label>
                </div>
            </div>
        </div>
        <div class="d-flex gap-3">
            <NavLink class="btn custom-outline-secondary-btn align-self-start" type="button" href=@($"/CustomerInfo/{CustomerId}")>@Resources.ButtonCancel</NavLink>
            <button type=submit class="btn custom-btn align-self-end">
                @Resources.ButtonSave
            </button>
        </div>
    </div>
    </EditForm>
}

@code {
    private NewProjectDto _newProject = new();
    private NewLocalityDto _newLocaly = new();
    private List<LocalityDto> _lokalities = [new()];
    private List<UserDto> _users = [new()];
    private Kunde? _customer = new();
    private bool _isLoading = true;
    [Parameter] public Guid CustomerId { get; set; }
    private string? _errorMessage;
    private bool _isNewLocality;
    

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _customer = await Http.GetFromJsonAsync<Kunde>($"api/Customer/{CustomerId}");
            if (_customer != null)
            {
                _newProject = new NewProjectDto
                {
                    Kundekontaktperson = _customer.Kontaktperson,
                    Kundetlf = _customer.Telefon
                };
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Feil ved lasting av kunde: {ex.Message}");
        }
        finally
        {
            _isLoading = false;
        }

        var usersList = await Http.GetFromJsonAsync<List<UserDto>>("api/users");
        _users = usersList?.OrderBy(user => user.FullName).ToList();

        _lokalities =
        [
            ..new List<LocalityDto>
            {
                new LocalityDto
                {
                    Id = Guid.Parse("22222222-2222-2222-2222-222222222222"),
                    Lokalitetsnavn = "Bergen Brygge", 
                    LokalitetsId = "12345"
                }
            }
        ];
    }

    private async Task AddNewProject()
    {
        _newProject.Datoregistrert = DateTime.Now;
        var response = await Http.PostAsJsonAsync("/api/Project", _newProject);
        
        if (response.IsSuccessStatusCode)
        {
            var projectId = await response.Content.ReadFromJsonAsync<Guid>();
            Navigation.NavigateTo($"project/{projectId:D}", forceLoad: true);
        }
        else
        {
            _errorMessage = Resources.ErrorMessageUnexpected;
        }
    }
    
    
    private void ToggleLocalityMode()
    {
        _isNewLocality = !_isNewLocality;
        
        if (_isNewLocality)
        {
            _newLocaly.LokalitetsId = null;
        }
        else
        {
            _newLocaly.Lokalitetsnavn = null;
            _newLocaly.LokalitetsId   = null;
        }
    }
}
