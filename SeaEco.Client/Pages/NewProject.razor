@page "/newProject/{CustomerId:guid}"
@using Microsoft.AspNetCore.Authorization
@using SeaEco.Abstractions.Models.Project
@attribute [Authorize(Roles = "admin")]
@using SeaEco.Client.Resources
@using SeaEco.Abstractions.Models.User
@inject HttpClient Http
@using SeaEco.EntityFramework.Entities
@inject NavigationManager Navigation


@if (_isLoading)
{
}
else
{
    <EditForm Model="_newProject" OnValidSubmit="AddNewProject">
    <DataAnnotationsValidator />

        <div class="d-flex flex-column align-items-center gap-3 mb-3">
        <div class="mb-3">
            <h3>Nytt prosjekt</h3>
            <h6 class="text-secondary">- @_customer.Oppdragsgiver</h6>
        </div>
        <div class="d-flex justify-content-lg-start flex-column gap-3">
            <div class="d-flex gap-3">
                <div class="form-floating flex-fill">
                    <InputText class="form-control" id="poId" @bind-Value="_newProject.PoId"/>
                    <label for="poId">PO-ID</label>
                </div>
            </div>
            <div class="d-flex flex-column mt-4 mb-4 gap-3">
                <div class="d-flex gap-3">
                    <div class="form-floating flex-fill">
                        <InputText class="form-control" id="contactCustomer" @bind-Value="_newProject.Kundekontaktperson"/>
                        <label for="contactCustomer">Konaktperson</label>
                    </div>
                </div>
                <div class="d-flex gap-3">
                    <div class="form-floating">
                        <InputText class="form-control" id="tlfCustomer" @bind-Value="_newProject.Kundetlf"/>
                        <label for="tlfCustomer">Telefonnummer</label>
                    </div>
                    <div class="form-floating">
                        <InputText class="form-control" id="emailCustomer" @bind-Value="_newProject.Kundeepost"/>
                        <label for="emailCustomer">epost</label>
                    </div>
                </div>
            </div>
            <div class="d-flex gap-3">
                <div class="form-floating flex-fill">
                    <InputText class="form-control" id="locality" @bind-Value="_newProject.Kundeepost"/>
                    <label for="locality">Lokalitet</label>
                </div>
            </div>
            <div class="d-flex gap-3">
                <div class="form-floating">
                    <InputNumber class="form-control" id="idLocality" @bind-Value="Lokalitetid"/>
                    <label for="idLocality">Lokalitets-ID</label>
                </div>
                <div class="form-floating">
                    <InputNumber class="form-control" id="mtb" @bind-Value="_newProject.Mtbtillatelse"/>
                    <label for="tlfCustomer">MTB-tilatelse (tonn)</label>
                </div>
            </div>
            <div class="d-flex gap-3 mt-4">
                <div class="d-flex form-floating flex-fill">
                    <InputSelect @bind-Value="AnsvarligansattNavn" id="user" class="form-control">
                        <option value=""></option>
                        @foreach (var user in _users)
                        {
                            <option value="@user.FullName">@user.FullName</option>
                        }
                    </InputSelect>
                    <label for="user">Ansvarlig ansatt</label>
                </div>
            </div>
            <div class="d-flex w-100 mt-4 mb-4">
                <div class="form-floating w-100">
                    <InputTextArea class="form-control" style="height: 150px;" id="comment" @bind-Value="_newProject.Merknad"/>
                    <label for="comment">Merknad</label>
                </div>
            </div>
        </div>

        <div class="d-flex gap-3">
            <NavLink class="btn btn-secondary align-self-start" type="button" href=@($"/CustomerInfo/{CustomerId}")>@Resources.ButtonCancel</NavLink>
            <button type=submit class="btn btn-secondary align-self-end">
                @Resources.ButtonSave
            </button>
        </div>
    </div>
    </EditForm>
}

@code {
    private NewProjectDto _newProject = new();
    private List<UserDto> _users = [new()];
    private Kunde? _customer = new();
    private bool _isLoading = true;
    [Parameter] public Guid CustomerId { get; set; }
    private string? _errorMessage;

    //benyttes i form, da backend enda ikke har variabelen. Form må oppdateres når klar.
    private string? AnsvarligansattNavn;
    private int? Lokalitetid; 


    protected override async Task OnInitializedAsync()
    {
        try
        {
            _customer = await Http.GetFromJsonAsync<Kunde>($"api/Customer/{CustomerId}");
            if (_customer != null)
            {
                _newProject = new NewProjectDto
                {   
                    Kundekontaktperson = _customer.Kontaktperson,
                    Kundetlf = _customer.Telefon
                };
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Feil ved lasting av kunde: {ex.Message}");
        }
        finally
        {
            _isLoading = false;
        }

        var usersList = await Http.GetFromJsonAsync<List<UserDto>>("api/users");
        _users = usersList?.OrderBy(user => user.FullName).ToList();
    }

    private async Task AddNewProject()
    {
        
        var response = await Http.PostAsJsonAsync("/api/Project", _newProject);
        
        if (response.IsSuccessStatusCode)
        {
            //Backendd må oppdateres først
            //Navigation.NavigateTo($"project/{prosjektId:D}", forceLoad: true);
        }
        else
        {
            _errorMessage = Resources.ErrorMessageUnexpected;
        }
    }
}
