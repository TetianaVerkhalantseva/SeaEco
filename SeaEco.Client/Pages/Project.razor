@page "/project/{prosjektId:guid}"
@using Microsoft.AspNetCore.Authorization
@using SeaEco.Abstractions.Enums
@attribute [Authorize]
@using SeaEco.Client.Resources
@using SeaEco.Abstractions.Models.Project
@using SeaEco.Client.Components
@inject HttpClient Http

@if (_project == null)
{
}
else
{
    <div class="d-flex flex-column align-items-center gap-3 p-5">
        <div class="mb-3">
            <h3>@_project.Lokalitetsnavn</h3>
            <p class="text-secondary">- @_project.Prosjektstatus </p>
        </div>

        <div class="d-flex w-100 p-1">
            <div class="flex-grow-1"></div>
            <button class="btn btn-secondary align-self-end" type="button">
                @Resources.ButtonProjectLog
            </button>
        </div>
        
            <details class=" filter-panel shadow-lg w-100">
                <summary>@Resources.ButtonProjectInfoView</summary>
            <div class="filter-options">
                <EditForm Model="_project" OnValidSubmit="EditProjectInformation">
                <div class="d-flex flex-xxl-row flex-column gap-3 ">
                    <DataAnnotationsValidator/>
                    <div class="form-floating">
                        <InputText class="form-control" id="poid" @bind-Value="_project.PoId" @key="_numberInputKey" disabled/>
                        <label for="poid">@Resources.InputTextPoId</label>
                    </div>
                    <div class="d-flex flex-column gap-3">
                        <div class="form-floating">
                            <InputText class="form-control" id="locationId" @bind-Value="_project.LokalitetsId" @key="_numberInputKey" disabled="@(!_editProjectInfo)"/>
                            <label for="locationId">@Resources.InputTextLocationId</label>
                        </div>

                    </div>
                    <div class="d-flex flex-column gap-3">
                        <div class="d-flex form-floating">
                            <InputNumber class="form-control" id="numberOfStations" @bind-Value="_project.AntallStasjoner" @key="_numberInputKey" disabled/>
                            <label for="numberOfStations">@Resources.InputTextNumberOfStations</label>
                        </div>
                        <div class="d-flex form-floating">
                            <InputNumber class="form-control" id="mtb" @bind-Value="_project.Mtbtillatelse" @key="_numberInputKey" disabled="@(!_editProjectInfo)"/>
                            <label for="mtb">@Resources.InputTextMtb</label>
                        </div>
                    </div>
                    <div class="d-flex flex-column flex-fill">
                        <div class="d-flex form-floating">
                            <InputTextArea class="form-control" id="comment" @bind-Value="_project.Merknad" @key="_numberInputKey" style="height: 130px" disabled="@(!_editProjectInfo)"></InputTextArea>
                            <label for="comment">@Resources.InputTextComment</label>
                        </div>
                    </div>
                    <div class="flex-grow-1"></div>
                </div>
                <div class="d-flex justify-content-end mt-3">
                    @if (!_editProjectInfo)
                    {
                        <button class="btn btn-secondary" type="button" @onclick="OnClickProjectInformation">
                            @Resources.ButtonEdit
                        </button>
                    }
                    else
                    {
                        <div class="d-flex gap-2">
                            <button class="btn btn-secondary" type="button" @onclick="CancelEditProjectInformation">
                                @Resources.ButtonCancel
                            </button>
                            <button class="btn btn-secondary" type="submit">
                                @Resources.ButtonSave
                            </button>
                        </div>
                    }
                </div>
                <div class="mt-3 text-center" style="height: 30px">
                    <div class="custom-validation-summary">
                        <ValidationSummary/>
                    </div>

                    @if (!string.IsNullOrEmpty(_errorMessage))
                    {
                        <p class="text-danger">@_errorMessage</p>
                    }
                </div>
                </EditForm>
            </div>
            </details>
            


        @if (_editProjectInfo)
        {
            <div class="background-overlay"></div>
        }


        <ul class="nav nav-tabs d-flex flex-xxl-row flex-column w-100 mt-5">
            <li class="nav-item flex-fill">
                <a class="nav-link text-center fw-bold cursor @(_activeTab == "projectPlan" ? "active" : "")"  @onclick=@(() => SelectedTab("projectPlan"))>
                @Resources.TabProjectPlan
                </a>
            </li>
            <li class="nav-item flex-fill">
                <a class="nav-link text-center fw-bold cursor @(_activeTab == "b_stations" ? "active" : "")" @onclick=@(() => SelectedTab("b_stations"))>
                    @Resources.TabBStation
                </a>
            </li>
            <li class="nav-item flex-fill">
                <a class="nav-link text-center fw-bold cursor @(_activeTab == "projectReport" ? "active" : "")" @onclick=@(() => SelectedTab("projectReport"))>
                    @Resources.TabProjectReport
                </a>
            </li>
        </ul>

        @if (_activeTab=="projectPlan")
        {
            <ProjectPlan Project="_projectCopy"></ProjectPlan>
        }
        else if (_activeTab == "b_stations")
        {
            <B_stations></B_stations>
        }
        else if (_activeTab=="projectReport")
        {
            <Report></Report>
        }
    </div>

}


@code {
    [Parameter] public Guid prosjektId { get; set; }

    private ProjectDto _project;
    private ProjectDto _projectCopy;
    private bool _editProjectInfo;
    private int _numberInputKey = 0;
    private string _activeTab = "projectPlan";
    private string?  _errorMessage;


    protected override async Task OnInitializedAsync()
    {
        _project = await Http.GetFromJsonAsync<ProjectDto>($"api/Project/{prosjektId:D}");
       
        _projectCopy = BackupProject(_project);
        
    }

    private void OnClickProjectInformation()
    {
        _editProjectInfo = true;

    }

    private async Task EditProjectInformation()
    {
        var response = await Http.PutAsJsonAsync($"api/Project/{_project.Id:D}", _project);
        if (response.IsSuccessStatusCode)
        {   
            //ønsker helst å ikke gjøre et ekstra kall, men å hente fra response
            _project = await Http.GetFromJsonAsync<ProjectDto>($"api/Project/{prosjektId:D}");
            _projectCopy = BackupProject(_project);
            _editProjectInfo = false;
        }
        else
        {
            _errorMessage = Resources.ErrorMessageUnexpected; 
        }
    }

    private void CancelEditProjectInformation()
    {
        _project = BackupProject(_projectCopy);
        _numberInputKey++;
        _editProjectInfo = false;
    }

    private void SelectedTab(string tab)
    {
        _activeTab = tab;
    }

    private ProjectDto BackupProject(ProjectDto source)
    {
        return new ProjectDto
        {
            PoId = source.PoId,
            Lokalitetsnavn = source.Lokalitetsnavn,
            LokalitetsId = source.LokalitetsId,
            Mtbtillatelse = source.Mtbtillatelse,
            Merknad = source.Merknad,
            Prosjektstatus = source.Prosjektstatus
        };
    }

}