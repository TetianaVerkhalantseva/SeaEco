@page "/project/{ProjectId:guid}/preInfo/{PreInfoId:guid}"
@using Microsoft.AspNetCore.Authorization
@using SeaEco.Abstractions.Models.PreInfo
@using SeaEco.Abstractions.Models.User
@inject HttpClient Http
@attribute [Authorize]
@inject NavigationManager Navigation


<h3>Preinformasjon</h3>


@if (_isLoaded)
{
    <div class="preInfo-container">
        <div class="form-floating mb-3">
            <input type="date" id="date" class="form-control" disabled
                   value="@_preInfo.Feltdato.ToString("yyyy-MM-dd")">
            <label for="date">Dato</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="text" id="user" class="form-control" disabled
                   value="@_user.FullName">
            <label for="user">Feltansvarlig</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="text" id="samplers" class="form-control" disabled
                   value="@string.Join(", ", _samplers.Select(s => s.FullName))">
            <label for="samplers">Andre pr√∏vetakere</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="number" id="ph" class="form-control" disabled
                   value="@_preInfo.Ph">
            <label for="ph">pH</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="number" id="eh" class="form-control" disabled
                   value="@_preInfo.Eh">
            <label for="eh">Eh</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="number" id="temp" class="form-control" disabled
                   value="@_preInfo.Temperatur">
            <label for="temp">Temperatur</label>
        </div>

        <div class="form-floating mb-3">
            <input type="number" id="elektrode" class="form-control" disabled
                   value="@_preInfo.RefElektrode">
            <label for="elektrode">Ref.elektrode</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="text" id="grabb" class="form-control" disabled
                   value="@_preInfo.Grabb">
            <label for="grabb">Grabb</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="text" id="sil" class="form-control" disabled
                   value="@_preInfo.Sil">
            <label for="sil">Sil</label>
        </div>
        
        <div class="form-floating mb-3">
            <input type="text" id="ph-meter" class="form-control" disabled
                   value="@_preInfo.PhMeter">
            <label for="ph-meter">pH-meter</label>
        </div>
    </div>
}
else
{
    <div class="mt-3 text-center">
        <div class="alert alert-info">Laster data...</div>
    </div>
}

<div class="button-container">
    <NavLink class="btn custom-btn me-2" href="@($"/project/{ProjectId:D}?tab=b_stations")">
        Tilbake
    </NavLink>
    @if (_preInfo != null)
    {
        <NavLink class="btn custom-btn me-2" href="@($"project/{ProjectId:D}/preInfo/{PreInfoId:D}/edit")">
            Rediger
        </NavLink>
    }
</div>


@code {
    [Parameter] public Guid ProjectId { get; set; }
    [Parameter] public Guid PreInfoId { get; set; }

    private PreInfoDto? _preInfo = new();
    private UserDto? _user = new();
    private List<UserDto?> _samplers = [];

    private bool _isLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadPreInfoData();
        _isLoaded = true;
    }

    private async Task LoadPreInfoData()
    {
        _preInfo = await Http.GetFromJsonAsync<PreInfoDto>($"api/PreInfo/{PreInfoId}");
        if (_preInfo != null)
        {
            _user = await Http.GetFromJsonAsync<UserDto>($"api/users/{_preInfo.FeltansvarligId}");

            foreach (var userId in _preInfo.ProvetakerIds)
            {
                var sampler = await Http.GetFromJsonAsync<UserDto>($"api/users/{userId}");
                if (sampler is not null)
                {
                    _samplers.Add(sampler);
                }
            }
        }
    }
}