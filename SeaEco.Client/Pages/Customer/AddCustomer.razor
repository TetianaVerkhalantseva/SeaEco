@page "/AddCustomer"
@inject HttpClient Http
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "admin")]
@using SeaEco.Abstractions.Models.Customer
@inject NavigationManager Navigation
@using SeaEco.Client.Resources


<EditForm Model="_newCustomer" OnValidSubmit="CustomerRegistration">
    <DataAnnotationsValidator />
    <div class="container mt-4">
        <div class="card shadow-lg p-4">
            <h2 class="text-center mt-4 mb-5">@Resources.PageAddCustomerAddCustomer</h2>

            <div class="form-floating mb-3">
                <InputText id="Oppdragsgiver" class="form-control form-control-lg" @bind-Value="_newCustomer.Oppdragsgiver" placeholder="Oppdragsgiver" />
                <label for="Oppdragsgiver" class="form-label">@Resources.PageCustomerInfoCustomerName</label>
            </div>

            <div class="form-floating mb-3">
                <InputText id="Kontaktperson" class="form-control form-control-lg" @bind-Value="_newCustomer.Kontaktperson" placeholder="Kontaktperson" />
                <label for="Kontaktperson" class="form-label">@Resources.PageCustomerInfoContactPerson</label>
            </div>

            <div class="form-floating mb-3">
                <InputText id="Telefonnummer" class="form-control form-control-lg" @bind-Value="_newCustomer.Telefon" placeholder="Telefonnummer" />
                <label for="Telefonnummer" class="form-label">@Resources.PageCustomerInfoCustomerNumber</label>
            </div>

            <div class="text-center mt-4">
                <button class="btn custom-outline-secondary-btn me-2" @onclick="CustomerPage">@Resources.ButtonCancel</button>
                <button type="submit" class="btn custom-btn">@Resources.ButtonSave</button>
            </div>

            <div class="mt-3 text-center">
                <div class="custom-validation-summary">
                    <ValidationSummary/>
                </div>

                @if (_result.HasValue)
                {
                    @if (_result.Value)
                    {
                        <div class="alert alert-success">@Resources.PageEditCustomerSuccess</div>
                    }
                    else
                    {
                        <div class="alert alert-danger">@Resources.PageEditCustomerFailed</div>
                    }
                }
            </div>
        </div>
    </div>
</EditForm>


@code {
    private EditCustomerDto _newCustomer = new();
    private bool? _result;

    private async Task CustomerRegistration()
    {
        var response = await Http.PostAsJsonAsync("api/Customer/Add-customer", _newCustomer);
        if (response.IsSuccessStatusCode)
        {
            _result = true;
            StateHasChanged();
            await Task.Delay(1000);
            Navigation.NavigateTo("Customer");
        }
        else
        {
            _result = false;
        }
    }

    private void CustomerPage()
    {
        Navigation.NavigateTo("Customer");
    }
}