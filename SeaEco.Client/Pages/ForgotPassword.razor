@page "/ForgotPassword"
@using SeaEco.Abstractions.Models.Authentication
@using SeaEco.Client.Resources
@inject HttpClient Http


<EditForm Model="_mail" OnValidSubmit="ToResetPassword" >
    <DataAnnotationsValidator />
<div class="d-flex flex-column align-items-center ">
    <div class="mb-3 justify-content-center">
        <h3>Glemt ditt passord?</h3>
        <p>Skriv inn din epost-adresse og send inn. Du vil motta mail med link til Ã¥ resette ditt passord.</p>
    </div>

    <div class="d-flex flex-column gap-4">
        <div class="d-flex flex-column gap-2">
            @if (_mail != null)
            {
                <InputText id="email" class="form-control" @bind-Value="_mail.Email" placeholder="@Resources.InputTextMail" @oninput="() => _errorMessage = null"/>
            }
        </div>
        
        <div class="d-flex justify-content-center">
            <button type="submit" class="btn btn-secondary">Send</button>
        </div>
        

        <div class=" text-center">
                <div class="custom-validation-summary">
                    <ValidationSummary/>
                </div>   
            @if (!string.IsNullOrEmpty(_errorMessage))
            {
                <p class="text-danger">@_errorMessage</p>
            }
        </div>
    </div>
</div>
</EditForm>

@code {
    private readonly ResetPasswordDto? _mail = new();
    private string? _errorMessage;


    private async Task ToResetPassword()
    {
        _errorMessage = string.Empty;

        var response = await Http.PostAsJsonAsync("api/authentication/request-reset-password",_mail);
    
        
        if (response.IsSuccessStatusCode)
        {    
            await Http.PostAsJsonAsync("/api/email/send",_mail);
        }
        else
        {
            _errorMessage = response.StatusCode == System.Net.HttpStatusCode.BadRequest ? Resources.ErrorMessageWrongMail : Resources.ErrorMessageUnexpected;
        }
    }
}