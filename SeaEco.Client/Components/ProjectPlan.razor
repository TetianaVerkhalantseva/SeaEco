@using SeaEco.Client.Resources
@using SeaEco.Abstractions.Models.Project
@using SeaEco.Abstractions.Models.User
@inject HttpClient Http


    <div class="d-flex flex-column gap-3 mt-3">
        <span>Planleggere</span>
        <div class="d-flex flex-column gap-3">


            <div class="d-flex form-floating">
                <InputSelect @bind-Value="selectedUser1" id="user1" class="form-control" disabled="@(!_editProjectPlan)">
                    <option value=""></option>
                    @foreach (var user in users)
                    {
                        <option value="@user.FullName">@user.FullName</option>
                    }
                </InputSelect>
                <label for="user1">Planlegger 1</label>
            </div>
            <div class="d-flex form-floating">
                <InputSelect @bind-Value="selectedUser2" id="user2" class="form-control" disabled="@(!_editProjectPlan)">
                    <option value=""></option>
                    @foreach (var user in users)
                    {
                        <option value="@user.FullName">@user.FullName</option>
                    }
                </InputSelect>
                <label for="user2">Planlegger 2</label>
            </div>
            <div class="d-flex form-floating">
                <InputSelect @bind-Value="selectedUser3" id="user3" class="form-control" disabled="@(!_editProjectPlan)">
                    <option value=""></option>
                    @foreach (var user in users)
                    {
                        <option value="@user.FullName">@user.FullName</option>
                    }
                </InputSelect>
                <label for="user3">Planlegger 3</label>
            </div>

        </div>


        @for (int station = 1; station <= Project.Antallstasjoner + _addedStations; station++)
        {
            <div class="d-flex flex-column gap-3 mt-3">
                <span>Stasjon @station</span>
                <div class="d-flex flex-row gap-3">

                    <div class="d-flex form-floating">
                        <InputText class="form-control" id=@($"positionN_{station}")  @bind-Value="stationData[station - 1].PositionN" disabled="@(!_editProjectPlan)"/>
                        <label for="positionN_@station">Kordinater Nord</label>
                    </div>
                    <div class="d-flex form-floating">
                        <InputText class="form-control" id=@($"positionS_{station}") @bind-Value="stationData[station - 1].PositionS" disabled="@(!_editProjectPlan)"/>
                        <label for="positionS_@station">Kordinater SÃ¸r</label>
                    </div>
                </div>
                <div class="d-flex form-floating">
                    <InputText class="form-control" id=@($"depth_{station}") @bind-Value="stationData[station - 1].Depth" disabled="@(!_editProjectPlan)"/>
                    <label for="depth_@station">Dybde</label>
                </div>
                <div class="d-flex form-floating">
                    <InputText class="form-control" id=@($"method_{station}") @bind-Value="stationData[station - 1].Method" disabled="@(!_editProjectPlan)"/>
                    <label for="method_@station">Analyse</label>
                </div>
            </div>
        }
        <div class="d-flex flex-row align-self-end justify-content-end w-100 mb-3">

            @if (!_editProjectPlan)
            {
                <button class="btn btn-outline-secondary filter-button" type="button" @onclick="OnCklickProjectPlan">
                    Rediger
                </button>
            }
            else
            {
                <div class="d-flex gap-2 flex-column flex-xxl-row w-100">
                    <button class="btn btn-outline-secondary filter-button" type="button" @onclick="AddStation">
                        + Legg til en stasjon
                    </button>
                    <div class="d-flex flex-grow-1"></div>
                    <div class="d-flex gap-2 justify-content-center">
                        <button class="btn btn-outline-secondary filter-button" type="button" @onclick="CancelEditProjectPlan">
                            @Resources.ButtonCancel
                        </button>
                        <button class="btn btn-outline-secondary filter-button" type="button" @onclick="EditProjectPlan">
                            @Resources.ButtonSave
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>




@code {
    [Parameter] public ProjectDto Project { get; set; }

    private bool _editProjectPlan;
    private int _addedStations = 0;
    private int _addedUser = 1;
    private List<UserDto>? users = new List<UserDto>();
    private string selectedUser1;
    private string selectedUser2;
    private string selectedUser3;

    private List<StationData> stationData = new List<StationData>
    {
        new StationData(),
        new StationData(),
        new StationData()
    };



    protected override async Task OnInitializedAsync()
    {
        int count = (Project?.Antallstasjoner ?? 0);
        for (int i = 0; i < count; i++)
        {
            stationData.Add(new StationData());
        }

        var usersList = await Http.GetFromJsonAsync<List<UserDto>>("api/users");
        users = usersList?.OrderBy(user => user.FullName).ToList();
    }

    private void OnCklickProjectPlan()
    {
        _editProjectPlan = true;
    }

    private void EditProjectPlan()
    {
        _editProjectPlan = false;
    }

    private void CancelEditProjectPlan()
    {
        _editProjectPlan = false;
        _addedStations = 0;
    }

    private async Task AddStation()
    {
        _addedStations = 1 + _addedStations;
    }

    private async Task RemoveStation()
    {
        _addedStations = -1 + _addedStations;
    }

    public class StationData
    {
        public string PositionN { get; set; }
        public string PositionS { get; set; }
        public string Depth { get; set; }
        public string Method { get; set; }

    }

}

