
<div class="dropdown">
    <div class="form-control d-flex flex-wrap align-items-center fixed-dropdown" @onclick="ToggleDropdown">
        @if (SelectedOptions.Any())
        {
            @foreach (var option in SelectedOptions)
            {
                <span class="badge bg-secondary me-1 mb-1 tag">
                    @option 
                    <span class="ms-1" style="cursor:pointer" 
                          @onclick:stopPropagation="true" 
                          @onclick="() => RemoveOption(option)">&times;</span>
                </span>
            }
        }
        else
        {
            <span class="placeholder-text">Alle</span>
        }
    </div>
    
    @if (DropdownOpen)
    {
        <ul class="dropdown-menu show w-100" style="max-height: 200px; overflow-y: auto">
            @foreach (var option in Options)
            {
                <li>
                    <a class="dropdown-item" href="#" 
                       @onclick:preventDefault="true" 
                       @onclick="() => ToggleOption(option)">
                        @option
                    </a>
                </li>
            }
        </ul>
    }
</div>

@code {
    [Parameter]
    public List<string> Options { get; set; } = new List<string>();
    [Parameter]
    public List<string> SelectedOptions { get; set; } = new List<string>();
    [Parameter]
    public EventCallback<List<string>> SelectedOptionsChanged { get; set; }

    private bool DropdownOpen { get; set; } = false;
    
    private void ToggleDropdown() => DropdownOpen = !DropdownOpen;
    
    private async Task ToggleOption(string option)
    {
        if (SelectedOptions.Contains(option))
        {
            SelectedOptions.Remove(option);
        }
        else
        {
            SelectedOptions.Add(option);
        }
        await SelectedOptionsChanged.InvokeAsync(SelectedOptions);
    }


    private async Task RemoveOption(string option)
    {
        SelectedOptions.Remove(option);
        await SelectedOptionsChanged.InvokeAsync(SelectedOptions);
    }
}
